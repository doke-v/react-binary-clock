{"version":3,"sources":["App.js","index.js"],"names":["App","state","bintime","time","currentHint","hints","blockNumbers","componentDidMount","_this","tick","setInterval","window","addEventListener","nextHint","d","Date","toTimeString","split","replace","arr","forEach","el","num","n","bits","bin","Number","toString","length","dec2bin","push","generateHints","setState","blocks","map","i","children","item","j","react_default","a","createElement","key","className","_this$state","_this$state2","this","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+NA8EeA,iNA1EbC,MAAQ,CAAEC,QAAS,GAAIC,KAAM,GAAIC,YAAa,EAAGC,MAAM,GAAIC,cAAc,KAEzEC,kBAAoB,WAClBC,EAAKC,OACLC,YAAYF,EAAKC,KAAM,KACvBE,OAAOC,iBAAiB,QAASJ,EAAKK,aAExCJ,KAAK,WACH,IAAIK,GAAI,IAAIC,MAAOC,eAAeC,MAAM,KAAK,GAAGC,QAAQ,KAAM,IAAID,MAAM,IACpEE,EAAM,GACVL,EAAEM,QAAQ,SAAUC,GAClB,IAAIC,EAuDV,SAAiBC,EAAGC,GAClB,IAAIC,EAAMC,OAAOH,GAAGI,SAAS,GAC7B,KAAOF,EAAIG,OAASJ,GAClBC,EAAM,IAAMA,EAEd,OAAOA,EA5DOI,CAAQR,EAAI,GAAGJ,MAAM,IAC/BE,EAAIW,KAAKR,KAEXd,EAAKuB,gBACLvB,EAAKwB,SAAS,CAAE9B,QAASiB,EAAKhB,KAAMW,OAGtCmB,OAAS,WACP,IAAIA,EAAS,GAUb,OATAzB,EAAKP,MAAMC,QAAQgC,IAAI,SAACb,EAAIc,GAC1B,IAAIV,EAAM,GACNW,EAAW,GAKf,OAJAf,EAAGa,IAAI,SAACG,EAAMC,GAEZ,OADAb,GAAU,EACHW,EAASN,KAAKS,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAGK,UAAWN,EAAO,EAAI,WAAa,QAAS7B,EAAKP,MAAMK,cAAgBiC,EAAAC,EAAAC,cAAA,SAAIhB,OAExGQ,EAAOH,KAAKS,EAAAC,EAAAC,cAAA,OAAKC,IAAKP,EAAGQ,UAAU,OAAOP,MAE5CH,KAGTF,cAAgB,WACd,IAAI1B,EAAQ,GACZA,EAAM,GAAK,SAASY,MAAM,IAC1BZ,EAAM,GAAK,SAASY,MAAM,IAC1BZ,EAAM,GAAKG,EAAKP,MAAME,KACtBE,EAAM,GAAKG,EAAKP,MAAME,KACtBE,EAAM,GAAK,CAAC,IACZG,EAAKwB,SAAS,CAAC3B,aAGjBQ,SAAW,WAAM,IAAA+B,EAC0BpC,EAAKP,MAAzCI,EADUuC,EACVvC,MAAOC,EADGsC,EACHtC,aAAcF,EADXwC,EACWxC,YAC1BA,EAAcC,EAAMuB,OAAS,EAAExB,GAAa,EAAEA,EAAc,EAC3CE,EAAH,IAAdF,EACAI,EAAKwB,SAAS,CAAC5B,cAAaE,0FAGrB,IAAAuC,EACoBC,KAAK7C,MAA3BI,EADEwC,EACFxC,MAAOD,EADLyC,EACKzC,YACZ,OACEmC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZG,KAAKb,UAERM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZtC,EAAMuB,QAAUvB,EAAMD,GAAa8B,IAAI,SAACb,EAAIc,GAC3C,OAAOI,EAAAC,EAAAC,cAAA,OAAKC,IAAKP,EAAGQ,UAAU,QAAQtB,cA3DhC0B,aCElBC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d370d6ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = { bintime: [], time: [], currentHint: 0, hints:[], blockNumbers: false}\n\n  componentDidMount = () => {\n    this.tick()\n    setInterval(this.tick, 1000)\n    window.addEventListener('click', this.nextHint);\n  }\n  tick=() => {\n    let d = new Date().toTimeString().split(\" \")[0].replace(/:/g, \"\").split(\"\");\n    let arr = []\n    d.forEach(function (el) {\n      var num = dec2bin(el, 4).split(\"\")\n      arr.push(num)\n    })\n    this.generateHints()\n    this.setState({ bintime: arr, time: d })\n  }\n\n  blocks = () => {\n    let blocks = []\n    this.state.bintime.map((el, i) => {\n      let bin = 16\n      let children = []\n      el.map((item, j) => {\n        bin = bin/2\n        return children.push(<div key={j} className={item > 0 ? \"item lit\" : \"item\"}>{this.state.blockNumbers && <p>{bin}</p> }</div>)\n      })   \n      return blocks.push(<div key={i} className=\"col\">{children}</div>)\n    })\n    return blocks;\n  }\n\n  generateHints = () => {\n    let hints = []\n    hints[0] = \"CLICK!\".split(\"\")\n    hints[1] = \"HHMMSS\".split(\"\")\n    hints[2] = this.state.time\n    hints[3] = this.state.time\n    hints[4] = [\"\"]\n    this.setState({hints})\n  }\n\n  nextHint = () => {\n    let {hints, blockNumbers, currentHint} = this.state   \n    currentHint < hints.length - 1?currentHint+=1:currentHint = 0\n    currentHint===3? blockNumbers= true:blockNumbers = false\n    this.setState({currentHint, blockNumbers})\n  }\n\n  render() {\n    let {hints, currentHint} = this.state\n    return (  \n      <div className=\"container\">\n        <div className=\"clock\">\n          {this.blocks()}\n        </div >\n        <div className=\"help-row\">   \n          {hints.length && hints[currentHint].map((el, i) => {\n            return <div key={i} className=\"item\">{el}</div>})\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction dec2bin(n, bits) {\n  let bin = Number(n).toString(2)\n  while (bin.length < bits) {\n    bin = \"0\" + bin;\n  }\n  return bin;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}